import { c as create_ssr_component, e as escape } from "./ssr.js";
import "./client.js";
const css$1 = {
  code: ".dashboard-tile.svelte-13bj85w{border-radius:10px;padding:5px 0px;flex:1}.dashboard-title-header.svelte-13bj85w{display:flex;flex-direction:column;align-items:center}.dashboard-tile-title.svelte-13bj85w{display:flex;align-items:center;margin-top:0;margin-bottom:0}.dashboard-tile-actions.svelte-13bj85w{width:40%}",
  map: `{"version":3,"file":"dashboard-tile.svelte","sources":["dashboard-tile.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { goto } from \\"$app/navigation\\";\\nexport let title = \\"\\";\\nexport let redirect = \\"\\";\\n<\/script>\\r\\n\\r\\n<div class=\\"dashboard-tile\\">\\r\\n\\t<div class=\\"dashboard-title-header\\">\\r\\n\\t\\t<div\\r\\n\\t\\t\\tstyle=\\"margin-bottom: 0\\"\\r\\n\\t\\t\\tclass=\\"dashboard-tile-title\\"\\r\\n\\t\\t\\ttabindex=\\"0\\"\\r\\n\\t\\t\\trole=\\"button\\"\\r\\n\\t\\t\\ton:click={() => goto('/' + redirect)}\\r\\n\\t\\t>\\r\\n\\t\\t\\t{#if redirect}<span\\r\\n\\t\\t\\t\\t\\tstyle=\\"font-size: 1.4rem; padding: .2rem .2rem; color: transparent\\"\\r\\n\\t\\t\\t\\t\\tclass=\\"material-symbols-outlined\\"\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\tmore_vert\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t{/if}\\r\\n\\t\\t\\t<h3 class=\\"dashboard-tile-title\\"><slot name=\\"title\\"></slot>{title}</h3>\\r\\n\\r\\n\\t\\t\\t{#if redirect}<span\\r\\n\\t\\t\\t\\t\\tstyle=\\"padding: .2rem .2rem; font-size: 1.4rem\\"\\r\\n\\t\\t\\t\\t\\tclass=\\"material-symbols-outlined\\"\\r\\n\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t\\tmore_vert\\r\\n\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t{/if}\\r\\n\\t\\t</div>\\r\\n\\t\\t<slot name=\\"subtext\\" />\\r\\n\\t\\t<div class=\\"dashboard-tile-actions\\">\\r\\n\\t\\t\\t<slot name=\\"actions\\" />\\r\\n\\t\\t\\t<hr style=\\"margin-top: 0\\" />\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<div class=\\"dashboard-tile-content\\">\\r\\n\\t\\t<slot />\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\\t.dashboard-tile {\\r\\n\\t\\t/* display: flex;\\r\\n\\t\\tflex-direction: column; */\\r\\n\\t\\tborder-radius: 10px;\\r\\n\\t\\t/* align-items: center;\\r\\n\\t\\tjustify-content: space-between; */\\r\\n\\t\\tpadding: 5px 0px;\\r\\n\\t\\tflex: 1;\\r\\n\\t}\\r\\n\\t.dashboard-title-header {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t\\talign-items: center;\\r\\n\\t}\\r\\n\\t.dashboard-tile-title {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tmargin-top: 0;\\r\\n\\t\\tmargin-bottom: 0;\\r\\n\\t}\\r\\n\\t.dashboard-tile-subtitle {\\r\\n\\t\\ttext-align: center;\\r\\n\\t}\\r\\n\\t.dashboard-tile-actions {\\r\\n\\t\\twidth: 40%;\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA2CC,8BAAgB,CAGf,aAAa,CAAE,IAAI,CAGnB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,IAAI,CAAE,CACP,CACA,sCAAwB,CACvB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MACd,CACA,oCAAsB,CACrB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,CAAC,CACb,aAAa,CAAE,CAChB,CAIA,sCAAwB,CACvB,KAAK,CAAE,GACR"}`
};
const Dashboard_tile = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { title = "" } = $$props;
  let { redirect = "" } = $$props;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.redirect === void 0 && $$bindings.redirect && redirect !== void 0)
    $$bindings.redirect(redirect);
  $$result.css.add(css$1);
  return `<div class="dashboard-tile svelte-13bj85w"><div class="dashboard-title-header svelte-13bj85w"><div style="margin-bottom: 0" class="dashboard-tile-title svelte-13bj85w" tabindex="0" role="button">${redirect ? `<span style="font-size: 1.4rem; padding: .2rem .2rem; color: transparent" class="material-symbols-outlined" data-svelte-h="svelte-1gomgi7">more_vert</span>` : ``} <h3 class="dashboard-tile-title svelte-13bj85w">${slots.title ? slots.title({}) : ``}${escape(title)}</h3> ${redirect ? `<span style="padding: .2rem .2rem; font-size: 1.4rem" class="material-symbols-outlined" data-svelte-h="svelte-12wct51">more_vert</span>` : ``}</div> ${slots.subtext ? slots.subtext({}) : ``} <div class="dashboard-tile-actions svelte-13bj85w">${slots.actions ? slots.actions({}) : ``} <hr style="margin-top: 0"></div></div> <div class="dashboard-tile-content">${slots.default ? slots.default({}) : ``}</div> </div>`;
});
const css = {
  code: ".dashboard.svelte-1y5fpll{margin:10px;flex:1;display:flex;flex-direction:column;height:100%}.dashboard-title.svelte-1y5fpll{display:flex;align-items:center;margin-top:00rem;margin-bottom:0}.dashboard-content.svelte-1y5fpll{border-radius:0 10px 10px;padding:10px;flex:1;background-color:white;height:100%;box-shadow:rgba(9, 30, 66, 0.25) 0px 4px 8px -2px,\r\n			rgba(9, 30, 66, 0.08) 0px 0px 0px 1px}",
  map: `{"version":3,"file":"dashboard.svelte","sources":["dashboard.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { goto } from \\"$app/navigation\\";\\nexport let title = \\"\\";\\nexport let redirect = \\"\\";\\n<\/script>\\r\\n\\r\\n<div class=\\"dashboard\\">\\r\\n\\t<div\\r\\n\\t\\tclass=\\"dashboard-title\\"\\r\\n\\t\\tstyle=\\"margin-top: 1rem\\"\\r\\n\\t\\ttabindex=\\"0\\"\\r\\n\\t\\trole=\\"button\\"\\r\\n\\t\\ton:click={() => goto('/' + redirect)}\\r\\n\\t>\\r\\n\\t\\t<h2 class=\\"dashboard-title\\"><slot name=\\"title\\"></slot>{title}</h2>\\r\\n\\r\\n\\t\\t{#if redirect}<span\\r\\n\\t\\t\\t\\tstyle=\\"padding: .1rem .1rem; font-size: 1.7rem\\"\\r\\n\\t\\t\\t\\tclass=\\"material-symbols-outlined\\"\\r\\n\\t\\t\\t>\\r\\n\\t\\t\\t\\tmore_vert\\r\\n\\t\\t\\t</span>\\r\\n\\t\\t{/if}\\r\\n\\t</div>\\r\\n\\t<slot name=\\"actions\\" />\\r\\n\\t<div class=\\"dashboard-content\\">\\r\\n\\t\\t<slot name=\\"content\\" />\\r\\n\\t</div>\\r\\n</div>\\r\\n\\r\\n<style>\\r\\n\\t.dashboard {\\r\\n\\t\\tmargin: 10px;\\r\\n\\t\\tflex: 1;\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\tflex-direction: column;\\r\\n\\t\\theight: 100%;\\r\\n\\t}\\r\\n\\t.dashboard-title {\\r\\n\\t\\tdisplay: flex;\\r\\n\\t\\talign-items: center;\\r\\n\\t\\tmargin-top: 00rem;\\r\\n\\t\\tmargin-bottom: 0;\\r\\n\\t}\\r\\n\\t.dashboard-content {\\r\\n\\t\\tborder-radius: 0 10px 10px;\\r\\n\\t\\tpadding: 10px;\\r\\n\\t\\tflex: 1;\\r\\n\\t\\tbackground-color: white;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\tbox-shadow:\\r\\n\\t\\t\\trgba(9, 30, 66, 0.25) 0px 4px 8px -2px,\\r\\n\\t\\t\\trgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\\r\\n\\t}\\r\\n</style>\\r\\n"],"names":[],"mappings":"AA8BC,yBAAW,CACV,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,IACT,CACA,+BAAiB,CAChB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,CAChB,CACA,iCAAmB,CAClB,aAAa,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAC1B,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CACP,gBAAgB,CAAE,KAAK,CACvB,MAAM,CAAE,IAAI,CACZ,UAAU,CACT,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;AAC1C,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GACpC"}`
};
const Dashboard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { title = "" } = $$props;
  let { redirect = "" } = $$props;
  if ($$props.title === void 0 && $$bindings.title && title !== void 0)
    $$bindings.title(title);
  if ($$props.redirect === void 0 && $$bindings.redirect && redirect !== void 0)
    $$bindings.redirect(redirect);
  $$result.css.add(css);
  return `<div class="dashboard svelte-1y5fpll"><div class="dashboard-title svelte-1y5fpll" style="margin-top: 1rem" tabindex="0" role="button"><h2 class="dashboard-title svelte-1y5fpll">${slots.title ? slots.title({}) : ``}${escape(title)}</h2> ${redirect ? `<span style="padding: .1rem .1rem; font-size: 1.7rem" class="material-symbols-outlined" data-svelte-h="svelte-1uvvasj">more_vert</span>` : ``}</div> ${slots.actions ? slots.actions({}) : ``} <div class="dashboard-content svelte-1y5fpll">${slots.content ? slots.content({}) : ``}</div> </div>`;
});
export {
  Dashboard as D,
  Dashboard_tile as a
};
